Handling qualified identifiers in constant propagation

We've added support for qualified identifiers in constant propagation. Notably,
this enables the following matches (with the pro engine):

```yaml
rules:
  - id: cpp-const-field
    languages:
      - cpp
    message: testing
    severity: INFO
    pattern: std::cout<<1
```

```cpp
#include<iostream>
#include "a.h"

namespace B {
class Bar {
    public:
        static const int one = 1;
};
}

int main() {
    // ruleid: cpp-const-field
    std::cout<<1<<std::endl;

    // ruleid: cpp-const-field
    std::cout<<A::Foo::one<<std::endl;

    // ruleid: cpp-const-field
    std::cout<<B::Bar::one<<std::endl;
}
```
