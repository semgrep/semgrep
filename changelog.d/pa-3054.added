Try-catch-else-finally is now supported in taint analysis.

This change also includes some updates to our analysis. Previously we assumed that
any statement inside the try clause may throw an exception, but now only
function calls are assumed to possibly throw exceptions.

Throw statements always throw an exception as it was before.

This kind of statement is supported in languages including Python, Ruby, and Julia.

Python example:

```py
def f(tainted_input):
  try:
    a = 0
    b = 0
    c = tainted_input
    d = tainted_input
  except RuntimeError:
    a = tainted_input
    c = sanitize(c)
  else:
    b = tainted_input
  finally:
    d = sanitize(d)

  # a is not tainted because exception wasn't assumed to be thrown
  sink(a)
  # b is tainted through the else clause
  sink(b)
  # c is tainted at the beginning, but it was not sanitized
  # because an exception was not thrown
  sink(c)
  # d is tainted at the beginning, but it was sanitized
  # because the finally clause is always executed
  sink(d)
```
