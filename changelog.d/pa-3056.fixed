Programs like

fn f(x:i32) {
  x;
  x;
  x;
}


in expression-oriented languages, such as Rust, will treat the last x
as if it was "return x".

Currently we use a hack to support this. To support it in a more
general case, we would like to take advantage of keeping track of
nodes that may exit a function in the control flow graph.

This change updates one part of how we build the control flow graph to
prepare for a more general implicit return support.
