=== command
CI="true" GITHUB_ACTIONS="true" GITHUB_EVENT_NAME="pull_request" GITHUB_REPOSITORY="project_name/project_name" GITHUB_RUN_ID="35" GITHUB_ACTOR="some_test_username" GITHUB_REF="some/branch-name" GITHUB_EVENT_PATH="<MASKED>" SEMGREP_APP_TOKEN="fake-key-from-tests" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci
=== end of command

=== exit code
0
=== end of exit code

=== stdout - plain

Findings:

  bar.py 
     eqeq-five
        useless comparison to 5

         ▶▶┆ Autofix ▶ bar == 2
          1┆ bar == 2

=== end of stdout - plain

=== stderr - plain
Scan environment:
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment github-actions, triggering event is pull_request
  semgrep.dev - authenticated as org_name

Fixing git state for github action pull request
Not on head ref: 17b3114fb3d41437abc2a3e6499db84ad921e6f0; checking that out now.
Using f7ee3123ed098941662685dd8b726fceee48f78d as the merge-base of f7ee3123ed098941662685dd8b726fceee48f78d and 17b3114fb3d41437abc2a3e6499db84ad921e6f0
Fetching configuration from semgrep.dev
Adding ignore patterns configured on semgrep.dev as `--exclude` options: ()
Fetching rules from https://semgrep.dev/registry.
Scanning 1 file with 4 python rules.
  Current version has 1 finding.

Skipping baseline scan, because all current findings are in files that didn't exist in the baseline commit.
Returning to original head revision 17b3114fb3d41437abc2a3e6499db84ad921e6f0

Some files were skipped or only partially analyzed.
  Scan was limited to files changed since baseline commit.

CI scan completed successfully.
  Found 1 finding (0 blocking) from 3 rules.
  Uploading findings to Semgrep App.
  No blocking findings so exiting with code 0

=== end of stderr - plain