=== command
SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep --strict --config rules/dependency_aware/python-poetry-sca.yaml --json targets/dependency_aware/poetry
=== end of command

=== exit code
0
=== end of exit code

=== stdout - plain
{
  "errors": [],
  "paths": {
    "_comment": "<add --verbose for a list of skipped paths>",
    "scanned": [
      "targets/dependency_aware/poetry/sca-poetry.py"
    ]
  },
  "results": [
    {
      "check_id": "rules.dependency_aware.python-poetry-sca",
      "end": {
        "col": 6,
        "line": 1,
        "offset": 5
      },
      "extra": {
        "fingerprint": "191a8af8a25a9e508e8de1a442a57879076780eb7d90fe7d513fdf50111458e714335cc6c0d7d8110bb1cb2f4c0671c6e5319f40b06f18b85fd496bfdd926b91_0",
        "is_ignored": false,
        "lines": "bad()",
        "message": "oh no",
        "metadata": {},
        "metavars": {},
        "sca_info": {
          "dependency_match": {
            "dependency_pattern": {
              "ecosystem": "pypi",
              "package": "faker",
              "semver_range": "<= 13.11.1"
            },
            "found_dependency": {
              "allowed_hashes": {},
              "ecosystem": "pypi",
              "line_number": 17,
              "package": "faker",
              "transitivity": "direct",
              "version": "13.11.1"
            },
            "lockfile": "targets/dependency_aware/poetry/poetry.lock"
          },
          "reachability_rule": true,
          "reachable": true,
          "sca_finding_schema": 20220913
        },
        "severity": "WARNING"
      },
      "path": "targets/dependency_aware/poetry/sca-poetry.py",
      "start": {
        "col": 1,
        "line": 1,
        "offset": 0
      }
    }
  ],
  "version": "0.42"
}
=== end of stdout - plain

=== stderr - plain
Scanning 1 file.


Ran 1 rule on 1 file: 1 finding.

=== end of stderr - plain