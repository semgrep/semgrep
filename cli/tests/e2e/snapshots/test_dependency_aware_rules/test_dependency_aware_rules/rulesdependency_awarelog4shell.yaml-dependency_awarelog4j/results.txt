=== command
SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep --strict --config rules/dependency_aware/log4shell.yaml --json targets/dependency_aware/log4j
=== end of command

=== exit code
0
=== end of exit code

=== stdout - plain
{
  "errors": [],
  "paths": {
    "_comment": "<add --verbose for a list of skipped paths>",
    "scanned": [
      "targets/dependency_aware/log4j/log4shell.java"
    ]
  },
  "results": [
    {
      "check_id": "rules.dependency_aware.log4j2_tainted_argument",
      "end": {
        "col": 36,
        "line": 33,
        "offset": 1037
      },
      "extra": {
        "fingerprint": "c5c992be1578f7e3e653f7ef7c203471c8a7105c776e5b2f19d97d0aed6ac0155778a3ebdb98a17776539f734914e7a40d804d9ed2923e8ec3e36be4397e2b28_0",
        "is_ignored": false,
        "lines": "            logger.error(userName);",
        "message": "log4j logger.error tainted argument",
        "metadata": {},
        "metavars": {
          "$ARG": {
            "abstract_content": "userName",
            "end": {
              "col": 34,
              "line": 33,
              "offset": 1035
            },
            "propagated_value": {
              "svalue_abstract_content": "req.getParameter(\"uname\")",
              "svalue_end": {
                "col": 52,
                "line": 19,
                "offset": 562
              },
              "svalue_start": {
                "col": 27,
                "line": 19,
                "offset": 537
              }
            },
            "start": {
              "col": 26,
              "line": 33,
              "offset": 1027
            }
          },
          "$LOGGER": {
            "abstract_content": "logger",
            "end": {
              "col": 19,
              "line": 33,
              "offset": 1020
            },
            "propagated_value": {
              "svalue_abstract_content": "LogManager.getLogger(com.example.log4shell.log4j.class)",
              "svalue_end": {
                "col": 84,
                "line": 32,
                "offset": 1000
              },
              "svalue_start": {
                "col": 29,
                "line": 32,
                "offset": 945
              }
            },
            "start": {
              "col": 13,
              "line": 33,
              "offset": 1014
            }
          },
          "$METHOD": {
            "abstract_content": "error",
            "end": {
              "col": 25,
              "line": 33,
              "offset": 1026
            },
            "start": {
              "col": 20,
              "line": 33,
              "offset": 1021
            }
          },
          "$PKG": {
            "abstract_content": "LogManager",
            "end": {
              "col": 43,
              "line": 9,
              "offset": 235
            },
            "start": {
              "col": 33,
              "line": 9,
              "offset": 225
            }
          }
        },
        "sca_info": {
          "dependency_match": {
            "dependency_pattern": {
              "ecosystem": "maven",
              "package": "log4j-core",
              "semver_range": "<= 0.0.2"
            },
            "found_dependency": {
              "allowed_hashes": {},
              "ecosystem": "maven",
              "package": "log4j-core",
              "transitivity": "unknown",
              "version": "0.0.1"
            },
            "lockfile": "targets/dependency_aware/log4j/pom.xml"
          },
          "reachability_rule": true,
          "reachable": true,
          "sca_finding_schema": 20220913
        },
        "severity": "WARNING"
      },
      "path": "targets/dependency_aware/log4j/log4shell.java",
      "start": {
        "col": 13,
        "line": 33,
        "offset": 1014
      }
    }
  ],
  "version": "0.42"
}
=== end of stdout - plain

=== stderr - plain
Scanning 1 file.


Ran 1 rule on 1 file: 1 finding.

=== end of stderr - plain