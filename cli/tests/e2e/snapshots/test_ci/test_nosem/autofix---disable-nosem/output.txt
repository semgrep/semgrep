=== command
SEMGREP_APP_TOKEN="fake_key" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors --disable-nosem
=== end of command

=== exit code
1
=== end of exit code

=== stdout - plain


┌───────────────────────────┐
│ 10 Blocking Code Findings │
└───────────────────────────┘

    foo.py
       eqeq-bad
          useless comparison

            4┆ a == a
            ⋮┆----------------------------------------
            5┆ a == a
            ⋮┆----------------------------------------
            6┆ a == a  # nosemgrep
            ⋮┆----------------------------------------
            7┆ a == a
            ⋮┆----------------------------------------
            9┆ x == x  # nosemgrep
            ⋮┆----------------------------------------
           11┆ y == y
            ⋮┆----------------------------------------
           13┆ z == z  # nosemgrep

       eqeq-four
          useless comparison to 4

           18┆ baz == 4  # nosemgrep
            ⋮┆----------------------------------------
           19┆ baz == 4

       taint-test
          unsafe use of danger

           27┆ sink(d2)


┌──────────────────────────────────┐
│ 1 Reachable Supply Chain Finding │
└──────────────────────────────────┘

    poetry.lock
       supply-chain1
          found a dependency

            2┆ name = "badlib"


┌──────────────────────────────┐
│ 2 Non-blocking Code Findings │
└──────────────────────────────┘

    foo.py
       eqeq-five
          useless comparison to 5

           ▶▶┆ Autofix ▶ (x == 2)
           15┆ (x == 2)
            ⋮┆----------------------------------------
           ▶▶┆ Autofix ▶ (y == 2)
           16┆ (y == 2)  # nosemgrep

  BLOCKING CODE RULES FIRED:
    eqeq-bad
    eqeq-four
    taint-test


=== end of stdout - plain

=== stderr - plain


┌────────────────┐
│ Debugging Info │
└────────────────┘

  SCAN ENVIRONMENT
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment git, triggering event is unknown

  CONNECTION
  Initializing scan (deployment=org_name, scan_id=12345)
  Enabled products: Code, Supply Chain

┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 4 files tracked by git with 4 Code rules, 3 Supply Chain rules:


  CODE RULES
  Scanning 1 file with 4 python rules.

  SUPPLY CHAIN RULES
  Scanning 1 file.


┌──────────────┐
│ Scan Summary │
└──────────────┘
Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.

CI scan completed successfully.
  Found 13 findings (10 blocking) from 7 rules.
  Uploading scan results
  Finalizing scan           View results in Semgrep Cloud Platform:
    https://semgrep.dev/orgs/org_name/findings
    https://semgrep.dev/orgs/org_name/supply-chain
  Has findings for blocking rules so exiting with code 1
  semgrep.dev is suggesting a non-zero exit code (Test Reason)

=== end of stderr - plain