=== command
SEMGREP_APP_TOKEN="" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors --disable-nosem --config p/something
=== end of command

=== exit code
1
=== end of exit code

=== stdout - plain

Semgrep Supply Chain Summary: 0 Reachable findings, 1 Unreachable finding


Unreachable Supply Chain Findings:

  poetry.lock 
     supply-chain1
        found a dependency


First-Party Findings:

  foo.py 
     eqeq-bad
        useless comparison

          4┆ a == a
          ⋮┆----------------------------------------
          5┆ a == a
          ⋮┆----------------------------------------
          6┆ a == a  # nosemgrep
          ⋮┆----------------------------------------
          7┆ a == a
          ⋮┆----------------------------------------
          9┆ x == x  # nosemgrep
          ⋮┆----------------------------------------
         11┆ y == y
          ⋮┆----------------------------------------
         13┆ z == z  # nosemgrep
          ⋮┆----------------------------------------
         23┆ b == b # Triage ignored by syntactic_id
          ⋮┆----------------------------------------
         24┆ a == a # Triage ignored by match_based_id
          ⋮┆----------------------------------------
     eqeq-five
        useless comparison to 5

         ▶▶┆ Autofix ▶ x == 2
         15┆ x == 5
          ⋮┆----------------------------------------
         ▶▶┆ Autofix ▶ y == 2
         16┆ y == 5  # nosemgrep
          ⋮┆----------------------------------------
     eqeq-four
        useless comparison to 4

         18┆ baz == 4  # nosemgrep
          ⋮┆----------------------------------------
         19┆ baz == 4
          ⋮┆----------------------------------------
     taint-test
        unsafe use of danger

         27┆ sink(d2)

=== end of stdout - plain

=== stderr - plain
Running `semgrep ci` without API token but with configs ('p/something',)
Scan environment:
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment git, triggering event is unknown

Fetching configuration from semgrep.dev
Semgrep rule registry URL is https://semgrep.dev/registry.
Scanning 1 file with 4 python rules.

Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.

CI scan completed successfully.
  Found 15 findings (12 blocking) from 6 rules.
  Has findings for blocking rules so exiting with code 1

=== end of stderr - plain