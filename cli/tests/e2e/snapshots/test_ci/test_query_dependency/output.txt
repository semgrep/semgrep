=== command
SEMGREP_APP_TOKEN="fake_key" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors
=== end of command

=== exit code
1
=== end of exit code

=== stdout - plain
Semgrep Supply Chain Summary: 0 Reachable findings, 1 Unreachable finding


Unreachable Supply Chain Findings:

  poetry.lock 
     supply-chain1
        found a dependency


First-Party Blocking Findings:

  foo.py 
     eqeq-bad
        useless comparison

          4┆ a == a
          ⋮┆----------------------------------------
          5┆ a == a
          ⋮┆----------------------------------------
          7┆ a == a
          ⋮┆----------------------------------------
         11┆ y == y

First-Party Blocking Rules Fired:
   eqeq-bad

=== end of stdout - plain

=== stderr - plain
                  
                  
┌────────────────┐
│ Debugging Info │
└────────────────┘
                  
  SCAN ENVIRONMENT
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment git, triggering event is unknown
            
  CONNECTION
  Reporting start of scan for deployment_name         
  Fetching configuration from Semgrep Cloud Platform                 
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 4 files tracked by git with 1 Code rule, 1 Supply Chain rule:
            
            
  CODE RULES
  Scanning 1 file.
                    
  SUPPLY CHAIN RULES
  Scanning 1 file.
           
           
┌─────────┐
│ Results │
└─────────┘
                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘
Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.

CI scan completed successfully.
  Found 5 findings (4 blocking) from 2 rules.
  Uploading findings.
  View results in Semgrep App:
    https://semgrep.dev/orgs/org_name/findings
    https://semgrep.dev/orgs/org_name/supply-chain
  Has findings for blocking rules so exiting with code 1

=== end of stderr - plain