{
  "errors": [],
  "paths": {
    "_comment": "<add --verbose for a list of skipped paths>",
    "scanned": [
      "targets/basic/inside.py",
      "targets/basic/metavariable-comparison-bad-content.py",
      "targets/basic/metavariable-comparison-base.py",
      "targets/basic/metavariable-comparison-strip.py",
      "targets/basic/metavariable-comparison.py",
      "targets/basic/metavariable-regex-multi-regex.py",
      "targets/basic/metavariable-regex-multi-rule.py",
      "targets/basic/metavariable-regex.py",
      "targets/basic/nosem.py",
      "targets/basic/regex.py",
      "targets/basic/stupid.py"
    ]
  },
  "results": [
    {
      "check_id": "rules.metavar-test",
      "end": {
        "col": 32,
        "line": 1,
        "offset": 31
      },
      "extra": {
        "fingerprint": "8d6ca720e521e39e3775f9f1b5cc7a24a2454eef5268351d2ebd6df02f29d3d5bcfbae8087e679f59073bb3cda49bd4cb3d64210c51427746a270daa76c631ec_0",
        "is_ignored": false,
        "lines": "metavariable_regex_test(\"test\")",
        "message": "Metavariable regex test",
        "metadata": {},
        "metavars": {
          "$X": {
            "abstract_content": "\"test\"",
            "end": {
              "col": 31,
              "line": 1,
              "offset": 30
            },
            "start": {
              "col": 25,
              "line": 1,
              "offset": 24
            }
          }
        },
        "severity": "ERROR"
      },
      "path": "targets/basic/metavariable-regex.py",
      "start": {
        "col": 1,
        "line": 1,
        "offset": 0
      }
    },
    {
      "check_id": "rules.metavar-test",
      "end": {
        "col": 35,
        "line": 2,
        "offset": 66
      },
      "extra": {
        "fingerprint": "fc7b1d6ff6822b639fec0f7337c6f4a8cac7f8aa87f3fc012d24a9da356b4b1873c3b15f3807ee0eae9da195d4d321002fa64fa5143446348b83937e4dda2f7f_0",
        "is_ignored": false,
        "lines": "metavariable_regex_test(\"example\")",
        "message": "Metavariable regex test",
        "metadata": {},
        "metavars": {
          "$X": {
            "abstract_content": "\"example\"",
            "end": {
              "col": 34,
              "line": 2,
              "offset": 65
            },
            "start": {
              "col": 25,
              "line": 2,
              "offset": 56
            }
          }
        },
        "severity": "ERROR"
      },
      "path": "targets/basic/metavariable-regex.py",
      "start": {
        "col": 1,
        "line": 2,
        "offset": 32
      }
    }
  ],
  "version": "0.42"
}