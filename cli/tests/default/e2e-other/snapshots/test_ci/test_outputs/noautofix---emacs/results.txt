=== command
SEMGREP_APP_TOKEN="fake_key" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors --oss-only --emacs
=== end of command

=== exit code
1
=== end of exit code

=== stdout - plain
foo.py:4:5:error(eqeq-bad):    a == a:useless comparison
foo.py:5:5:error(eqeq-bad):    a == a:useless comparison
foo.py:7:5:error(eqeq-bad):    a == a:useless comparison
foo.py:11:5:error(eqeq-bad):    y == y:useless comparison
foo.py:15:5:error(eqeq-five):    x == 5:useless comparison to 5
foo.py:19:5:error(eqeq-four):    baz == 4:useless comparison to 4
foo.py:27:5:warning(taint-test):    sink(d2):unsafe use of danger
poetry.lock:2:1:error(supply-chain1):name = "badlib":found a dependency

=== end of stdout - plain

=== stderr - plain


┌────────────────┐
│ Debugging Info │
└────────────────┘

  SCAN ENVIRONMENT
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment git, triggering event is unknown

  CONNECTION
  Initializing scan (deployment=org_name, scan_id=12345)
  Enabled products: Code, Supply Chain

┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 4 files tracked by git with 4 Code rules, 3 Supply Chain rules:


  CODE RULES
  Scanning 1 file with 4 python rules.

  SUPPLY CHAIN RULES
  Scanning 1 file.


┌──────────────┐
│ Scan Summary │
└──────────────┘
Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.

CI scan completed successfully.
  Found 8 findings (6 blocking) from 7 rules.
  Uploading scan results
  Finalizing scan           View results in Semgrep Cloud Platform:
    https://semgrep.dev/orgs/org_name/findings?repo=local_scan/checkout_project_name&ref=some/branch-name
    https://semgrep.dev/orgs/org_name/supply-chain
  Has findings for blocking rules so exiting with code 1
Test Reason

=== end of stderr - plain

=== stdout - color
<same as above: stdout - plain>
=== end of stdout - color

=== stderr - color
<same as above: stderr - plain>
=== end of stderr - color