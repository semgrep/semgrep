=== command
SEMGREP_APP_TOKEN="fake_key" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors --oss-only --baseline-commit <MASKED>
=== end of command

=== exit code
1
=== end of exit code

=== stdout - plain


┌──────────────────────────────────┐
│ 1 Reachable Supply Chain Finding │
└──────────────────────────────────┘

    foo.py with lockfile poetry.lock
   ❯❯❱ supply-chain-reachable-1
          found a reachable vulnerability from a dependency

            1┆ x = 2


=== end of stdout - plain

=== stderr - plain


┌────────────────┐
│ Debugging Info │
└────────────────┘

  SCAN ENVIRONMENT
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment git, triggering event is unknown

  CONNECTION
  Initializing scan (deployment=org_name, scan_id=12345)
  Enabled products: Code, Supply Chain

┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 0 Code rules:
  Nothing to scan.
  Current version has 1 finding.

Creating git worktree from '<MASKED>' to scan baseline.
  Will report findings introduced by these commits (may be incomplete for shallow checkouts):
    * <MASKED> add lockfile



┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 0 Code rules:
  Nothing to scan.


┌──────────────┐
│ Scan Summary │
└──────────────┘
Some files were skipped or only partially analyzed.
  Scan was limited to files changed since baseline commit.

CI scan completed successfully.
  Found 1 finding (1 blocking) from 3 rules.
  Uploading scan results
  Finalizing scan           View results in Semgrep Cloud Platform:
    https://semgrep.dev/orgs/org_name/findings?repo=local_scan/checkout_project_name&ref=some/branch-name
    https://semgrep.dev/orgs/org_name/supply-chain
  Has findings for blocking rules so exiting with code 1
  semgrep.dev is suggesting a non-zero exit code (Test Reason)

=== end of stderr - plain

=== stdout - color
<same as above: stdout - plain>
=== end of stdout - color

=== stderr - color
<same as above: stderr - plain>
=== end of stderr - color