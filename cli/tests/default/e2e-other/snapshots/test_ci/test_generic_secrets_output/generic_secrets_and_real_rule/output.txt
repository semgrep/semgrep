=== command
SEMGREP_APP_TOKEN="fake_key" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --oss-only
=== end of command

=== exit code
1
=== end of exit code

=== stdout - plain


┌───────────────────────────┐
│ 42 Blocking Code Findings │
└───────────────────────────┘

    foo.py
   ❯❯❱ real-rule-example
          this rule should actually display findings in CLI

            4┆ a == a
            ⋮┆----------------------------------------
            4┆ a == a
            ⋮┆----------------------------------------
            4┆ a == a
            ⋮┆----------------------------------------
            4┆ a == a
            ⋮┆----------------------------------------
            5┆ a == a
            ⋮┆----------------------------------------
            5┆ a == a
            ⋮┆----------------------------------------
            5┆ a == a
            ⋮┆----------------------------------------
            5┆ a == a
            ⋮┆----------------------------------------
            7┆ a == a
            ⋮┆----------------------------------------
            7┆ a == a
            ⋮┆----------------------------------------
            7┆ a == a
            ⋮┆----------------------------------------
            7┆ a == a
            ⋮┆----------------------------------------
           11┆ y == y
            ⋮┆----------------------------------------
           11┆ y == y
            ⋮┆----------------------------------------
           11┆ y == y
            ⋮┆----------------------------------------
           11┆ y == y
            ⋮┆----------------------------------------
           15┆ x == 5
            ⋮┆----------------------------------------
           15┆ x == 5
            ⋮┆----------------------------------------
           15┆ x == 5
            ⋮┆----------------------------------------
           15┆ x == 5
            ⋮┆----------------------------------------
           19┆ baz == 4
            ⋮┆----------------------------------------
           19┆ baz == 4
            ⋮┆----------------------------------------
           19┆ baz == 4
            ⋮┆----------------------------------------
           19┆ baz == 4
            ⋮┆----------------------------------------
           21┆ potato == 3
            ⋮┆----------------------------------------
           21┆ potato == 3
            ⋮┆----------------------------------------
           21┆ potato == 3
            ⋮┆----------------------------------------
           21┆ potato == 3
            ⋮┆----------------------------------------
           23┆ b == b # Triage ignored by syntactic_id
            ⋮┆----------------------------------------
           23┆ b == b # Triage ignored by syntactic_id
            ⋮┆----------------------------------------
           23┆ b == b # Triage ignored by syntactic_id
            ⋮┆----------------------------------------
           23┆ b == b # Triage ignored by syntactic_id
            ⋮┆----------------------------------------
           24┆ a == a # Triage ignored by match_based_id
            ⋮┆----------------------------------------
           24┆ a == a # Triage ignored by match_based_id
            ⋮┆----------------------------------------
           24┆ a == a # Triage ignored by match_based_id
            ⋮┆----------------------------------------
           24┆ a == a # Triage ignored by match_based_id
            ⋮┆----------------------------------------
           26┆ d2 = danger
            ⋮┆----------------------------------------
           26┆ d2 = danger
            ⋮┆----------------------------------------
           26┆ d2 = danger
            ⋮┆----------------------------------------
           27┆ sink(d2)
            ⋮┆----------------------------------------
           27┆ sink(d2)
            ⋮┆----------------------------------------
           27┆ sink(d2)

  Your deployment has generic secrets enabled. 42 potential line locations
  will be uploaded to the Semgrep platform and then analyzed by Semgrep Assistant.
  Any findings that appear actionable will be available in the Semgrep Platform.
  You can view the secrets analyzed by Assistant at
  https://semgrep.dev/orgs/-/secrets?status=open&type=AI-detected+secret


  BLOCKING CODE RULES FIRED:
    real-rule-example


=== end of stdout - plain

=== stderr - plain


┌────────────────┐
│ Debugging Info │
└────────────────┘

  SCAN ENVIRONMENT
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment git, triggering event is unknown

  CONNECTION
  Initializing scan (deployment=org_name, scan_id=12345)
  Enabled products: Code, Supply Chain

┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 4 files tracked by git with 1 Code rule, 1 Secrets rule:


  CODE RULES
  Scanning 1 file.

  SECRETS RULES
  Scanning 1 file.


┌──────────────┐
│ Scan Summary │
└──────────────┘
Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.

CI scan completed successfully.
  Found 84 findings (84 blocking) from 2 rules.
  Uploading scan results
  Finalizing scan           View results in Semgrep Cloud Platform:
    https://semgrep.dev/orgs/org_name/findings?repo=local_scan/checkout_project_name&ref=some/branch-name
  Has findings for blocking rules so exiting with code 1
Test Reason

=== end of stderr - plain

=== stdout - color
<same as above: stdout - plain>
=== end of stdout - color

=== stderr - color
<same as above: stderr - plain>
=== end of stderr - color