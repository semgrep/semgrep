; This library contains all the "core" data structures used by semgrep:
; The Rule, the Pattern, the generic AST, etc.
;
; This library now also includes semgrep_output_v1.atd (see the dune rules below).
; This file used to be in reporting/ because it was concerned mostly with JSON
; reporting of a scan result, but it now contains core data definitions
; (e.g., engine_kind, core_error_kind, skip_reason, matching_operation) reused
; in the OCaml core code.

(library
 (public_name semgrep.core)
 (name semgrep_core)
 (wrapped false)
 (libraries
   semver
   stdcompat
   str
   uri
   yaml
   atdgen-runtime
   sexplib

   commons
   glob
   lib_parsing ; Parse_info.ml
   ast_generic
   parser_javascript.ast ; TODO remove this, ugly dependency to Ast_js.default_entity in Pattern.ml
   ;note: we should not depend on pfff-lang_GENERIC-analyze in core
   ;note: we should also not depend on any other semgrep libs
   ; (except the 1 below)
   semgrep_configuring

   spacegrep ; Rule.ml references Spacegrep.Pattern_AST.t
   aliengrep
 )
 (preprocess
   (pps
     ppx_profiling
     ppx_deriving.show
     ppx_deriving.eq
     ppx_deriving.ord
     ppx_hash
     visitors.ppx
     ppx_sexp_conv
   )
 )
)

; '-j-defaults' is for matching the behavior of atdpy so that we can get the
; same JSON output from pysemgrep and osemgrep. This is useful only for
; passing end-to-end tests where osemgrep is expected to produce the same
; output as pysemgrep. This allows us to use '~field: ... list' which is more
; convenient than '?field: ... list option'.
;
(rule
 (targets semgrep_output_v1_j.ml semgrep_output_v1_j.mli)
 (deps    semgrep_output_v1.atd)
 (action  (run atdgen -j -j-std -j-defaults %{deps})))

(rule
 (targets semgrep_output_v1_t.ml semgrep_output_v1_t.mli)
 (deps    semgrep_output_v1.atd)
 (action  (run atdgen -t %{deps})))
