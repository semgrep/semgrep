#! /usr/bin/env bash
#
# Create a release branch for semgrep
#

case "$(uname -s)" in
  Linux)
    os_type=linux
    ;;
  *)
    os_type=Darwin
esac

sed_in_place() {
  if [[ "$os_type" = linux ]]; then
    sed -i -e "$@"
  else
    sed -i '' "$@"
  fi
}

error() {
  echo "Error:" "$@" >&2
  cat >&2
  exit 1
}

update_init_py() {
  target=cli/src/semgrep/__init__.py
  targets+=" $target"
  echo "Updating $target"
  sed_in_place 's/__VERSION__ = ".*"/__VERSION__ = "'"$release"'"/g' "$target"
  git add "$target"
}

update_version_ml() {
  target=semgrep-core/src/cli-lib/version.ml
  targets+=" $target"
  echo "Updating $target"
  sed_in_place 's/let version = ".*"/let version = "'"$release"'"/g' "$target"
  git add "$target"
}

update_setup_py() {
  target=setup.py
  targets+=" $target"
  echo "Updating $target"
  sed_in_place \
    's/^    install_requires=\["semgrep==.*"\],$/    install_requires=["semgrep=='"$release"'"],/g' \
    "$target"
  sed_in_place \
    's/^    version=".*",$/    version="'"$release"'",/g' \
    "$target"
  git add "$target"
}

update_cli_setup_py() {
  target=cli/setup.py
  targets+=" $target"
  echo "Updating $target"
  sed_in_place \
    's/^    version=".*",$/    version="'"$release"'",/g' \
    "$target"
  git add "$target"
}

# Update files containing the release ID.
#
# Ideally this shouldn't modify source files,
# but only write purely-generated files for simplicity and robustness.
bump() {
  update_init_py
  update_setup_py
  update_cli_setup_py
  update_version_ml
}

release="${SEMGREP_RELEASE_NEXT_VERSION}"

case "$release" in
  *.*.*)
    ;;
  '')
    error "empty release ID"
    ;;
  *)
    error "suspicious release ID"
esac

rel_branch=release-$release
cur_branch=$(git branch --show-current)

if [[ "$cur_branch" = "$rel_branch" ]]; then
  echo "Already on branch $rel_branch, great."
else
  error <<EOF
Please switch to a clean git branch named $rel_branch:
- git checkout develop
- git submodule update --init --recursive
- git checkout -b $rel_branch
EOF
fi

bump

if git status -s | grep -vq 'cli/src/semgrep/__init__.py\|cli/setup.py\|setup.py\|semgrep-core/src/cli-lib/version.ml'; then
  error <<EOF
The release branch contains unexpected changes, cancelling release.
EOF
fi
