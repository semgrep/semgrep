// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`misc interpolates metavariables in rule message 1`] = `
{
  "errors": [],
  "explanations": [
    {
      "children": [
        {
          "children": [],
          "loc": {
            "end": {
              "col": 33,
              "line": 9,
              "offset": 195,
            },
            "path": "test-interpolate-metavars.json",
            "start": {
              "col": 22,
              "line": 9,
              "offset": 184,
            },
          },
          "matches": [
            {
              "check_id": "test-interpolate-metavars",
              "end": {
                "col": 21,
                "line": 1,
                "offset": 20,
              },
              "extra": {
                "engine_kind": "OSS",
                "message": "Print content is $A",
                "metavars": {
                  "$A": {
                    "abstract_content": ""Hello World"",
                    "end": {
                      "col": 20,
                      "line": 1,
                      "offset": 19,
                    },
                    "start": {
                      "col": 7,
                      "line": 1,
                      "offset": 6,
                    },
                  },
                },
                "validation_state": "NO_VALIDATOR",
              },
              "path": "test.py",
              "start": {
                "col": 1,
                "line": 1,
                "offset": 0,
              },
            },
          ],
          "op": [
            "XPat",
            "print($A)",
          ],
        },
      ],
      "loc": {
        "end": {
          "col": 17,
          "line": 7,
          "offset": 149,
        },
        "path": "test-interpolate-metavars.json",
        "start": {
          "col": 7,
          "line": 7,
          "offset": 139,
        },
      },
      "matches": [
        {
          "check_id": "test-interpolate-metavars",
          "end": {
            "col": 21,
            "line": 1,
            "offset": 20,
          },
          "extra": {
            "engine_kind": "OSS",
            "message": "Print content is $A",
            "metavars": {
              "$A": {
                "abstract_content": ""Hello World"",
                "end": {
                  "col": 20,
                  "line": 1,
                  "offset": 19,
                },
                "start": {
                  "col": 7,
                  "line": 1,
                  "offset": 6,
                },
              },
            },
            "validation_state": "NO_VALIDATOR",
          },
          "path": "test.py",
          "start": {
            "col": 1,
            "line": 1,
            "offset": 0,
          },
        },
      ],
      "op": "And",
    },
  ],
  "paths": {
    "scanned": [
      "test.py",
    ],
  },
  "results": [
    {
      "check_id": "test-interpolate-metavars",
      "end": {
        "col": 21,
        "line": 1,
        "offset": 20,
      },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "<MASKED>",
        "is_ignored": false,
        "lines": "print("Hello World")",
        "message": "Print content is "Hello World"",
        "metadata": {},
        "metavars": {
          "$A": {
            "abstract_content": ""Hello World"",
            "end": {
              "col": 20,
              "line": 1,
              "offset": 19,
            },
            "start": {
              "col": 7,
              "line": 1,
              "offset": 6,
            },
          },
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR",
      },
      "path": "test.py",
      "start": {
        "col": 1,
        "line": 1,
        "offset": 0,
      },
    },
  ],
  "skipped_rules": [],
  "version": "<MASKED>",
}
`;

exports[`yaml parser interpolates metavariables in rule message 1`] = `
{
  "errors": [],
  "explanations": [
    {
      "children": [
        {
          "children": [],
          "loc": {
            "end": {
              "col": 33,
              "line": 9,
              "offset": 195,
            },
            "path": "test-interpolate-metavars.json",
            "start": {
              "col": 22,
              "line": 9,
              "offset": 184,
            },
          },
          "matches": [
            {
              "check_id": "test-interpolate-metavars",
              "end": {
                "col": 21,
                "line": 1,
                "offset": 20,
              },
              "extra": {
                "engine_kind": "OSS",
                "message": "Print content is $A",
                "metavars": {
                  "$A": {
                    "abstract_content": ""Hello World"",
                    "end": {
                      "col": 20,
                      "line": 1,
                      "offset": 19,
                    },
                    "start": {
                      "col": 7,
                      "line": 1,
                      "offset": 6,
                    },
                  },
                },
                "validation_state": "NO_VALIDATOR",
              },
              "path": "test.py",
              "start": {
                "col": 1,
                "line": 1,
                "offset": 0,
              },
            },
          ],
          "op": [
            "XPat",
            "print($A)",
          ],
        },
      ],
      "loc": {
        "end": {
          "col": 17,
          "line": 7,
          "offset": 149,
        },
        "path": "test-interpolate-metavars.json",
        "start": {
          "col": 7,
          "line": 7,
          "offset": 139,
        },
      },
      "matches": [
        {
          "check_id": "test-interpolate-metavars",
          "end": {
            "col": 21,
            "line": 1,
            "offset": 20,
          },
          "extra": {
            "engine_kind": "OSS",
            "message": "Print content is $A",
            "metavars": {
              "$A": {
                "abstract_content": ""Hello World"",
                "end": {
                  "col": 20,
                  "line": 1,
                  "offset": 19,
                },
                "start": {
                  "col": 7,
                  "line": 1,
                  "offset": 6,
                },
              },
            },
            "validation_state": "NO_VALIDATOR",
          },
          "path": "test.py",
          "start": {
            "col": 1,
            "line": 1,
            "offset": 0,
          },
        },
      ],
      "op": "And",
    },
  ],
  "paths": {
    "scanned": [
      "test.py",
    ],
  },
  "results": [
    {
      "check_id": "test-interpolate-metavars",
      "end": {
        "col": 21,
        "line": 1,
        "offset": 20,
      },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "<MASKED>",
        "is_ignored": false,
        "lines": "print("Hello World")",
        "message": "Print content is "Hello World"",
        "metadata": {},
        "metavars": {
          "$A": {
            "abstract_content": ""Hello World"",
            "end": {
              "col": 20,
              "line": 1,
              "offset": 19,
            },
            "start": {
              "col": 7,
              "line": 1,
              "offset": 6,
            },
          },
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR",
      },
      "path": "test.py",
      "start": {
        "col": 1,
        "line": 1,
        "offset": 0,
      },
    },
  ],
  "skipped_rules": [],
  "version": "<MASKED>",
}
`;

exports[`yaml parser parses a pattern with pattern-regex 1`] = `
{
  "errors": [],
  "explanations": [
    {
      "children": [],
      "loc": {
        "end": {
          "col": 30,
          "line": 6,
          "offset": 99,
        },
        "path": "test-rule-yaml-regex.json",
        "start": {
          "col": 24,
          "line": 6,
          "offset": 93,
        },
      },
      "matches": [
        {
          "check_id": "test",
          "end": {
            "col": 4,
            "line": 1,
            "offset": 3,
          },
          "extra": {
            "engine_kind": "OSS",
            "message": "test",
            "metavars": {},
            "validation_state": "NO_VALIDATOR",
          },
          "path": "test.yaml",
          "start": {
            "col": 1,
            "line": 1,
            "offset": 0,
          },
        },
      ],
      "op": [
        "XPat",
        "^fo+",
      ],
    },
  ],
  "paths": {
    "scanned": [
      "test.yaml",
    ],
  },
  "results": [
    {
      "check_id": "test",
      "end": {
        "col": 4,
        "line": 1,
        "offset": 3,
      },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "<MASKED>",
        "is_ignored": false,
        "lines": "foo: bar",
        "message": "test",
        "metadata": {},
        "metavars": {},
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR",
      },
      "path": "test.yaml",
      "start": {
        "col": 1,
        "line": 1,
        "offset": 0,
      },
    },
  ],
  "skipped_rules": [],
  "version": "<MASKED>",
}
`;

exports[`yaml parser parses a simple pattern 1`] = `
{
  "errors": [],
  "explanations": [
    {
      "children": [],
      "loc": {
        "end": {
          "col": 27,
          "line": 6,
          "offset": 96,
        },
        "path": "test-rule-yaml.json",
        "start": {
          "col": 18,
          "line": 6,
          "offset": 87,
        },
      },
      "matches": [
        {
          "check_id": "test",
          "end": {
            "col": 9,
            "line": 1,
            "offset": 8,
          },
          "extra": {
            "engine_kind": "OSS",
            "message": "test",
            "metavars": {
              "$X": {
                "abstract_content": "bar",
                "end": {
                  "col": 9,
                  "line": 1,
                  "offset": 8,
                },
                "start": {
                  "col": 6,
                  "line": 1,
                  "offset": 5,
                },
              },
            },
            "validation_state": "NO_VALIDATOR",
          },
          "path": "test.yaml",
          "start": {
            "col": 1,
            "line": 1,
            "offset": 0,
          },
        },
      ],
      "op": [
        "XPat",
        "foo: $X",
      ],
    },
  ],
  "paths": {
    "scanned": [
      "test.yaml",
    ],
  },
  "results": [
    {
      "check_id": "test",
      "end": {
        "col": 9,
        "line": 1,
        "offset": 8,
      },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "<MASKED>",
        "is_ignored": false,
        "lines": "foo: bar",
        "message": "test",
        "metadata": {},
        "metavars": {
          "$X": {
            "abstract_content": "bar",
            "end": {
              "col": 9,
              "line": 1,
              "offset": 8,
            },
            "start": {
              "col": 6,
              "line": 1,
              "offset": 5,
            },
          },
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR",
      },
      "path": "test.yaml",
      "start": {
        "col": 1,
        "line": 1,
        "offset": 0,
      },
    },
  ],
  "skipped_rules": [],
  "version": "<MASKED>",
}
`;
