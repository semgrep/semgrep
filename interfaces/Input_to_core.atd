(*
   Type definitions for semgrep-core's JSON input, coming from the
   python wrapper, 'semgrep'.

   There are other very important form of inputs which are not specified here:
    - The rule syntax and schema (see rule_schema.yaml; only the
      semgrep matching engine options are specified in Config_semgrep.atd)
    - The syntax for all the target files (see the grammar for the different
      tree-sitter and pfff parsers)
*)

(*****************************************************************************)
(* Targets *)
(*****************************************************************************)

(* For -targets.
 * coupling: if you change the type here, you probably also want to change
 * semgrep-core/tests/e2e/target
*)

type target = {
  path: string (* source file *);
  (* examples: "ocaml", "python", but also "generic" or "regexp".
   * less: would be great to use Lang.t here, but atd does not
   * allow (by design) to use types defined in other files.
   *)
  language: string;
  rule_ids: string list;
}

(* The same path can be present multiple times in targets below, with
 * different languages each time, so a Python file can be both analyzed
 * with Python rules, but also with generic/regexp rules.
 *
 * alt: we could have a list of languages instead in target above, but
 * because of the way semgrep-core is designed (with its file_and_more type),
 * you could have at most one PL language, and then possibly
 * "generic" and "regexp".
 *
 * alt: rule_ids above could also be used to analyze at once the same
 * file with both PL and generic/regexp rules.
 *)
type targets = target list
