{
  "errors": [],
  "paths": {
    "_comment": "<add --verbose for a list of skipped paths>",
    "scanned": [
      "targets/autofix/requests-use-timeout.py"
    ]
  },
  "results": [
    {
      "check_id": "rules.autofix.python.requests.best-practice.use-timeout.use-timeout",
      "end": {
        "col": 22,
        "line": 6,
        "offset": 84
      },
      "extra": {
        "fingerprint": "e32236298bc4b801234d19d42996b968",
        "fix_regex": {
          "regex": "(.*)\\)",
          "replacement": "\\1, timeout=30)"
        },
        "is_ignored": false,
        "lines": "r = requests.get(url)",
        "message": "'requests' calls default to waiting until the connection is closed.\nThis means a 'requests' call without a timeout will hang the program\nif a response is never received. Consider setting a timeout for all\n'requests'.\n",
        "metadata": {},
        "metavars": {},
        "severity": "WARNING"
      },
      "path": "targets/autofix/requests-use-timeout.py",
      "start": {
        "col": 5,
        "line": 6,
        "offset": 67
      }
    },
    {
      "check_id": "rules.autofix.python.requests.best-practice.use-timeout.use-timeout",
      "end": {
        "col": 23,
        "line": 9,
        "offset": 130
      },
      "extra": {
        "fingerprint": "e512c71f73dfe27258ef095bfa064f57",
        "fix_regex": {
          "regex": "(.*)\\)",
          "replacement": "\\1, timeout=30)"
        },
        "is_ignored": false,
        "lines": "r = requests.post(url)",
        "message": "'requests' calls default to waiting until the connection is closed.\nThis means a 'requests' call without a timeout will hang the program\nif a response is never received. Consider setting a timeout for all\n'requests'.\n",
        "metadata": {},
        "metavars": {},
        "severity": "WARNING"
      },
      "path": "targets/autofix/requests-use-timeout.py",
      "start": {
        "col": 5,
        "line": 9,
        "offset": 112
      }
    },
    {
      "check_id": "rules.autofix.python.requests.best-practice.use-timeout.use-timeout",
      "end": {
        "col": 33,
        "line": 12,
        "offset": 186
      },
      "extra": {
        "fingerprint": "9eb3eec657536bc0b2c9544fa537b42a",
        "fix_regex": {
          "regex": "(.*)\\)",
          "replacement": "\\1, timeout=30)"
        },
        "is_ignored": false,
        "lines": "r = requests.request(\"GET\", url)",
        "message": "'requests' calls default to waiting until the connection is closed.\nThis means a 'requests' call without a timeout will hang the program\nif a response is never received. Consider setting a timeout for all\n'requests'.\n",
        "metadata": {},
        "metavars": {},
        "severity": "WARNING"
      },
      "path": "targets/autofix/requests-use-timeout.py",
      "start": {
        "col": 5,
        "line": 12,
        "offset": 158
      }
    },
    {
      "check_id": "rules.autofix.python.requests.best-practice.use-timeout.use-timeout",
      "end": {
        "col": 42,
        "line": 18,
        "offset": 285
      },
      "extra": {
        "fingerprint": "c0888e9de0d14b3402d098dcb1af71c8",
        "fix_regex": {
          "regex": "(.*)\\)",
          "replacement": "\\1, timeout=30)"
        },
        "is_ignored": false,
        "lines": "r = requests.request(\"GET\", return_url())",
        "message": "'requests' calls default to waiting until the connection is closed.\nThis means a 'requests' call without a timeout will hang the program\nif a response is never received. Consider setting a timeout for all\n'requests'.\n",
        "metadata": {},
        "metavars": {},
        "severity": "WARNING"
      },
      "path": "targets/autofix/requests-use-timeout.py",
      "start": {
        "col": 5,
        "line": 18,
        "offset": 248
      }
    },
    {
      "check_id": "rules.autofix.python.requests.best-practice.use-timeout.use-timeout",
      "end": {
        "col": 18,
        "line": 29,
        "offset": 471
      },
      "extra": {
        "fingerprint": "1fea470855f7b6e0f91cba3d55611d5d",
        "fix_regex": {
          "regex": "(.*)\\)",
          "replacement": "\\1, timeout=30)"
        },
        "is_ignored": false,
        "lines": "    r = post(url)",
        "message": "'requests' calls default to waiting until the connection is closed.\nThis means a 'requests' call without a timeout will hang the program\nif a response is never received. Consider setting a timeout for all\n'requests'.\n",
        "metadata": {},
        "metavars": {},
        "severity": "WARNING"
      },
      "path": "targets/autofix/requests-use-timeout.py",
      "start": {
        "col": 9,
        "line": 29,
        "offset": 462
      }
    }
  ]
}
