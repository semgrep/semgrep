Snapshot for Test_scan_subcommand.test_basic_output.(fun)
--- begin input files ---
rules.yml
stupid.py
--- end input files ---
[<MASKED TIMESTAMP>][INFO]: Running external command: 'git' 'init' '-b' 'main'
Initialized empty Git repository in <TMP>/<MASKED>/.git/
[<MASKED TIMESTAMP>][INFO]: Running external command: 'git' 'config' 'user.name' 'Tester'
[<MASKED TIMESTAMP>][INFO]: Running external command: 'git' 'config' 'user.email' 'tester@example.com'
[<MASKED TIMESTAMP>][INFO]: Running external command: 'git' 'add' '.'
[<MASKED TIMESTAMP>][INFO]: Running external command: 'git' 'commit' '-m' 'Add files'
[main (root-commit) <MASKED>] Add files
 2 files changed, 11 insertions(+)
 create mode 100644 rules.yml
 create mode 100644 stupid.py

┌──── [32m○○○[39m ────┐
│ Semgrep CLI │
└─────────────┘

[32m✔[39m [1mSemgrep OSS[0m
  [32m✔[39m Basic security coverage for first-party code vulnerabilities.

[31m✘[39m [1mSemgrep Code (SAST)[0m
  [31m✘[39m Find and fix vulnerabilities in the code you write with advanced scanning and expert security rules.

[31m✘[39m [1mSemgrep Secrets[0m
  [31m✘[39m Detect and validate potential secrets in your code.

METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

[1m  Loading rules from local config...[0m


┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 3 files tracked by git with 1 Code rule:
  Scanning 3 files.


┌────────────────┐
│ 1 Code Finding │
└────────────────┘

    stupid.py
   ❯❯❱ eqeq-bad
          useless comparison

            3┆ return a + b == a + b



┌──────────────┐
│ Scan Summary │
└──────────────┘
Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.

Ran 1 rule on 1 file: 1 finding.
ASSERT exit code
