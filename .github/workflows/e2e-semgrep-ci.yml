name: Semgrep CI E2E Test
on:
  workflow_dispatch:
    inputs:
      docker_tag:
        description: "Docker Tag to Run. Default: develop"
        required: false
        default: "develop"
  schedule:
    - cron: "43 20 * * *"

jobs:
  get-inputs:
    name: Get Inputs
    runs-on: ubuntu-22.04
    outputs:
      docker_tag: ${{ steps.get-inputs.outputs.docker_tag }}
    steps:
      - name: Set variables
        id: get-inputs
        env:
          DOCKER_TAG: develop
        run: |
          echo "::set-output name=docker_tag::${{ inputs.docker_tag || env.DOCKER_TAG }}"
      - name: Debug
        run: |
          echo "${{ steps.get-inputs.outputs.docker_tag }}"

  semgrep-ci:
    name: Static Analysis Scan
    runs-on: ubuntu-22.04
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_E2E_APP_TOKEN }}
    needs: get-inputs
    container:
      image: "returntocorp/semgrep:${{ needs.get-inputs.outputs.docker_tag }}"
    steps:
      - uses: actions/checkout@v3
      - run: semgrep ci

  semgrep-ci-fail-open:
    name: Semgrep CI Fail Open
    runs-on: ubuntu-22.04
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_E2E_APP_TOKEN }}
      SEMGREP_APP_URL: https://staging.semgrep.dev
    needs: get-inputs
    container:
      image: "returntocorp/semgrep:${{ needs.get-inputs.outputs.docker_tag }}"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Remove Git Exe
        run: |
          which git
          rm /usr/bin/git
      - name: Run CI
        run: semgrep ci --fail-open

  semgrep-ci-on-pr:
    name: Run Semgrep CI on a PR
    uses: ./.github/workflows/open-bump-pr.yml
    secrets: inherit
    needs: get-inputs
    with:
      version: "${{ needs.get-inputs.outputs.docker_tag }}"
      repository: "returntocorp/e2e"
      base_branch: "develop"
      new_branch_name: "e2e-test-${{ github.run_id }}"
      bump_script_path: "scripts/change-version.sh"

  pr-url:
    runs-on: ubuntu-22.04
    needs: semgrep-ci-on-pr
    steps:
      - run: echo ${{ needs.semgrep-ci-on-pr.outputs.pr-url }}
      - run: echo ${{ needs.semgrep-ci-on-pr.outputs.pr-number }}

  wait-for-checks:
    runs-on: ubuntu-22.04
    needs: semgrep-ci-on-pr
    steps:
      - name: Get PAT
        id: token
        run: |
          echo "::add-mask::${{ secrets.TEMPORARY_PAT }}"
          echo "::set-output name=token::${{ secrets.TEMPORARY_PAT }}"
      - name: Wait for checks to register
        id: register-checks
        env:
          GITHUB_TOKEN: ${{ steps.token.outputs.token }}
        run: |
          LEN_CHECKS=$(gh pr -R returntocorp/e2e view "${{ needs.semgrep-ci-on-pr.outputs.pr-number }}" --json statusCheckRollup --jq '.statusCheckRollup | length');

          # Immediately after creation, the PR doesn't have any checks attached yet, wait until this is not the case
          # If you immediately start waiting for checks, then it just fails saying there's no checks.
          while [ ${LEN_CHECKS} = "0" ]; do
            echo "No checks available yet"
            sleep 30
            LEN_CHECKS=$(gh pr -R returntocorp/e2e view "${{ needs.semgrep-ci-on-pr.outputs.pr-number }}" --json statusCheckRollup --jq '.statusCheckRollup | length');
          done
          echo "checks are valid"

          echo ${LEN_CHECKS}

          gh pr -R returntocorp/e2e view "${{ needs.semgrep-ci-on-pr.outputs.pr-number }}" --json statusCheckRollup
      - name: Wait for checks to complete
        id: wait-checks
        env:
          GITHUB_TOKEN: ${{ steps.token.outputs.token }}
        run: |
          # Wait for PR checks to finish
          gh pr -R returntocorp/e2e checks "${{ needs.semgrep-ci-on-pr.outputs.pr-number }}" --interval 30 --watch

  notify-failure:
    needs: [semgrep-ci, semgrep-ci-on-pr, wait-for-checks]
    name: Notify of Failure
    runs-on: ubuntu-20.04
    if: failure()
    steps:
      - name: Notify Failure
        run: |
          curl --request POST \
          --url  ${{ secrets.SEMGREP_CI_E2E_NOTIFICATIONS_URL }} \
          --header 'content-type: application/json' \
          --data '{
            "workflow_run_url": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}} for more details!",
            "docker_tag": "${{ needs.get-inputs.outputs.docker_tag }}",
            "message": "The PR in `returntocorp/e2e` that had the failure was ${{ needs.semgrep-ci-on-pr.outputs.pr-number }}"
          }'
