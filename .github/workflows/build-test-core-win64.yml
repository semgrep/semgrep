# AUTOGENERATED FROM build-test-core-win64.jsonnet DO NOT MODIFY
name: build-test-core-win64
"on":
  workflow_dispatch:
  workflow_call:
jobs:
  job:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash  # Windows GHA runners default to pwsh (PowerShell). We want to use bash to be consistent with our other workflows.
    steps:
    - name: Configure git
      run: |
        # Git's filename limit is 4096 characters, except on Windows when Git is compiled with msys.
        # It uses an older version of the Windows API and there's a limit of 260 characters for a filename.
        # You can force the longer limit (and avoid git issues) by enabling core.longpaths in your git config.
        # More info: https://stackoverflow.com/a/22575737
        git config --system core.longpaths true

        # Speed up checkout by running multiple fetches in parallel
        git config --global fetch.parallel 50
    - uses: actions/checkout@v3
      with:
        submodules: true
    - uses: ocaml/setup-ocaml@v2
      with:
        ocaml-compiler: "4.14"
        opam-pin: false
        allow-prerelease-opam: true
        opam-repositories: |
          opam-repository-mingw: https://github.com/ocaml-opam/opam-repository-mingw.git#sunset
          default: https://github.com/ocaml/opam-repository.git
        opam-local-packages: dont_install_local_packages.opam  # bogus filename to prevent the action from attempting to install anything (we want deps only)
    - name: Build tree-sitter
      env:
        CC: x86_64-w64-mingw32-gcc
      run: |
        cd libs/ocaml-tree-sitter-core
        ./configure
        ./scripts/download-tree-sitter --lazy
        prefix="$(pwd)/tree-sitter"
        cd downloads/tree-sitter
        make PREFIX="$prefix" CFLAGS="-O3 -Wall -Wextra"
        make PREFIX="$prefix" install
    - name: Install deps
      run: |
        export PATH="${CYGWIN_ROOT_BIN}:${PATH}"
        opam depext conf-pkg-config conf-gmp conf-libpcre
        opam install -y ./ ./libs/ocaml-tree-sitter-core --deps-only
    - name: Build semgrep-core
      run: |
        export PATH="${CYGWIN_ROOT_BIN}:${PATH}"
        export TREESITTER_INCDIR=$(pwd)/libs/ocaml-tree-sitter-core/tree-sitter/include
        export TREESITTER_LIBDIR=$(pwd)/libs/ocaml-tree-sitter-core/tree-sitter/lib

        # We have to strip rpath from the tree-sitter projects because there's no equivalent in Windows
        # TODO: investigate removing rpath from the tree-sitter projects
        for filename in $(find ./languages/ ./libs/ocaml-tree-sitter-core/ -name dune); do
          grep -v rpath $filename > $filename.new
          mv $filename.new $filename
        done

        opam exec -- dune build _build/install/default/bin/semgrep-core.exe
    - name: Test semgrep-core
      run: |
        echo 'print(\"foo\")' > test.py
        _build/install/default/bin/semgrep-core.exe -e 'print($X)' -lang python -json test.py
    - name: Package semgrep-core
      run: |
        # TODO: figure out how to statically link in cygwin / windows (use opam for inspiration?)
        tar czvf ocaml-build-artifacts.tgz _build/install/default/bin/semgrep-core.exe \
          d:/cygwin/usr/x86_64-w64-mingw32/sys-root/mingw/bin/libstdc++-6.dll \
          d:/cygwin/usr/x86_64-w64-mingw32/sys-root/mingw/bin/libgcc_s_seh-1.dll \
          d:/cygwin/usr/x86_64-w64-mingw32/sys-root/mingw/bin/libwinpthread-1.dll \
          d:/cygwin/usr/x86_64-w64-mingw32/sys-root/mingw/bin/libpcre-1.dll \
          d:/cygwin/usr/x86_64-w64-mingw32/sys-root/mingw/bin/libgmp-10.dll
    - uses: actions/upload-artifact@v3
      with:
        path: ocaml-build-artifacts.tgz
        name: ocaml-build-artifacts-release-w64
