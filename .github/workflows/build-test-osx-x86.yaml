name: build-test-osx-x86

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-core-osx:
    name: Build the OSX binaries
    runs-on: ["self-hosted", "macOS", "X64"]
    steps:
      # Force hard cleanup of any old checkouts.
      # This is needed when submodules move around, as they are no longer removed by the default clean: true of the checkout step below.
      # This misses some files (like hidden files) but should take care of the issues we've been seeing.
      # A more targeted approach we tried previously seems to have failed to clean up all issues
      - name: Clean Checkout
        run: |
          rm -rf ./*
          rm .gitmodules
      - name: Make checkout speedy
        run: git config --global fetch.parallel 50
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: sudo python3 -m pip install pipenv==2022.6.7
      - name: Run OSX release script
        run: ./scripts/osx-release.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-osx-${{ github.sha }}
          path: artifacts.zip

  build-wheels-osx:
    runs-on: macos-12
    needs: [build-core-osx]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: semgrep-osx-${{ github.sha }}
      - name: Install artifacts
        run: unzip artifacts.zip
      - uses: actions/setup-python@v4
        with:
          # This is just the Python version to build the wheels
          python-version: 3.7
      - name: Build the wheels
        env:
          # Relative because build-wheels does a 'cd cli'
          SEMGREP_CORE_BIN: ../artifacts/semgrep-core
        run: ./scripts/build-wheels.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: osx-wheel
          path: cli/dist.zip

  test-wheels-osx:
    runs-on: macos-12
    needs: [build-wheels-osx]
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: osx-wheel
      - name: unzip dist
        run: unzip ./osx-wheel/dist.zip
      - name: install package
        run: pip3 install dist/*.whl
      - name: test version
        run: semgrep --version
      - name: e2e semgrep-core test
        run: echo '1 == 1' | semgrep -l python -e '$X == $X' -
      - name: e2e spacegrep test
        run: echo '1 == 1' | semgrep -l generic -e '$X == $X' -
      - name: test dynamically linked libraries are in /usr/lib/
        shell: bash {0}
        run: |
          otool -L $(semgrep --dump-engine-path) > otool.txt
          if [ $? -ne 0 ]; then
            echo "Failed to list dynamically linked libraries.";
            cat otool.txt;
            exit 1;
          fi
          NON_USR_LIB_DYNAMIC_LIBRARIES=$(cat otool.txt | tail -n +2 | grep -v "^\s*/usr/lib/")
          if [ $? -eq 0 ]; then
            echo "Error: semgrep-core has been dynamically linked against libraries outside /usr/lib:"
            echo $NON_USR_LIB_DYNAMIC_LIBRARIES
            exit 1;
          fi;
