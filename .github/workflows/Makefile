# Makefile to automatically convert the .jsonnet GHA workflows
# to .yml because GHA accepts only the YAML format.
#
# To convert more yml files to jsonnet, install 'yq' and 'jsonnetfmt'
# and run `jsonnetfmt <(cat foo.yml | yq)` to get a first draft.

# you can't use another jsonnet as only ojsonnet supports the --yaml flag
OJSONNET = ../../_build/install/default/bin/ojsonnet

LIBS = \
  libs/actions.libsonnet \
  libs/gha.libsonnet \
  libs/semgrep.libsonnet \

OBJS = \
  semgrep.yml lint.yml \
  update-semgrep-rules.yml \
  build-test-core-x86.yml build-test-core-x86-ocaml5.yml \
  build-test-osx-x86.yml build-test-osx-arm64.yml \
  build-test-manylinux-x86.yml build-test-manylinux-aarch64.yml \
  build-test-javascript.yml \
  tests.yml \
  test-e2e-semgrep-ci.yml nightly.yml \
  check-semgrep-pro.yml check-semgrep-pro-version.yml test-semgrep-pro.yml \
  start-release.yml release.yml release-homebrew.yml

#TODO: ExprTodo ObjectComp
#  trigger-semgrep-comparison-argo.yml \

all: $(OJSONNET) $(OBJS)

$(OJSONNET):
	cd ../..; make build-ojsonnet

%.yml: %.jsonnet $(LIBS)
	# Please provide a -o option that doesn't create an output file
	# in case of an error.
	echo "# AUTOGENERATED FROM $< DO NOT MODIFY" > $@
	$(OJSONNET) --envir --yaml $< >> $@ || { rm -f $@; exit 1; }

clean:
	rm -f $(OBJS)

# for pad's codemap
.PHONY: gen-codemapignore
gen-codemapignore: $(OBJS)
	rm -f .codemapignore
	for i in $(OBJS);  do \
		echo $$i >> .codemapignore; \
	done
