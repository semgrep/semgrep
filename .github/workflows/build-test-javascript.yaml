# Build, test, and upload the javascript code for Turbo mode.

name: build-test-javascript

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-semgrep-js-ocaml:
    runs-on: ubuntu-latest-16-core
    container: returntocorp/ocaml:alpine-2023-06-16
    # We need this hack because GHA tampers with the HOME in container
    # and this does not play well with 'opam' installed in /root
    env:
      HOME: /root
    steps:
      - name: Make checkout speedy
        run: git config --global fetch.parallel 50
      - uses: actions/checkout@v3
        with:
          submodules: true
      #TODO: should just call 'make install-deps-for-semgrep-core'
      - name: Set up tree-sitter
        run: |
          (cd libs/ocaml-tree-sitter-core && ./configure && ./scripts/install-tree-sitter-lib)
      # saving the checkout for build-test-js-artifacts below to save time
      - name: Cache git checkout
        id: cache-git
        uses: actions/cache/save@v3
        with:
          path: .
          key: semgrep-with-submodules-and-tree-sitter-${{ github.sha }}
      - name: Build semgrep
        run: |
          eval $(opam env)
          make install-deps-ALPINE-for-semgrep-core
          make install-deps-for-semgrep-core
          make build-semgrep-jsoo
      - uses: actions/upload-artifact@v3
        with:
          name: semgrep-js-ocaml-build-${{ github.sha }}
          retention-days: 1
          path: |
            _build/default/js/engine/*.bc.js
            _build/default/js/languages/*/*.bc.js

  build-test-js-artifacts:
    needs: [build-semgrep-js-ocaml]
    runs-on: ubuntu-latest-16-core
    container: emscripten/emsdk:3.1.36
    env:
      HOME: /root
    steps:
      - name: Restore git checkout cache
        id: restore-git
        uses: actions/cache/restore@v3
        with:
          path: .
          key: semgrep-with-submodules-and-tree-sitter-${{ github.sha }}
      - name: Make checkout speedy
        if: ${{ steps.restore-git.outputs.cache-hit != 'true' }}
        run: git config --global fetch.parallel 50
      - uses: actions/checkout@v3
        if: ${{ steps.restore-git.outputs.cache-hit != 'true' }}
        with:
          submodules: true
      - name: Set up tree-sitter
        if: ${{ steps.restore-git.outputs.cache-hit != 'true' }}
        run: |
          (cd libs/ocaml-tree-sitter-core && ./configure && ./scripts/install-tree-sitter-lib)
      - uses: actions/download-artifact@v3
        with:
          name: semgrep-js-ocaml-build-${{ github.sha }}
          path: _build/default/js
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Build and test JS artifacts
        run: |
          . libs/ocaml-tree-sitter-core/tree-sitter-config.sh
          make -C js -j $(nproc) test

          tar cvzf semgrep-js-artifacts.tar.gz \
            js/engine/dist/index.cjs \
            js/engine/dist/index.mjs \
            js/engine/dist/semgrep-engine.wasm \
            js/languages/*/dist/index.cjs \
            js/languages/*/dist/index.mjs \
            js/languages/*/dist/semgrep-parser.wasm
      - name: Upload JS artifacts
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-js-artifacts-${{ github.sha }}
          retention-days: 2
          path: semgrep-js-artifacts.tar.gz

  upload-javascript-artifacts:
    needs: [build-test-js-artifacts]
    if: github.ref == 'refs/heads/develop' || github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::338683922796:role/semgrep-oss-js-artifacts-deploy-role
          role-duration-seconds: 900
          role-session-name: "semgrep-s3-access"
          aws-region: us-west-2
      - uses: actions/download-artifact@v3
        with:
          name: semgrep-js-artifacts-${{ github.sha }}
          path: /tmp/semgrep
      - name: Upload to S3
        run: |
          branch_name=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          urlencoded_branch_name=$(printf %s $branch_name | jq -sRr @uri)
          current_datetime=$(date +"%Y-%m-%dT%H:%M:%S")
          aws s3 cp /tmp/semgrep/semgrep-js-artifacts.tar.gz "s3://semgrep-oss-js-artifacts/branch/${urlencoded_branch_name}/sha/${{ github.sha }}/semgrep-js-artifacts_${current_datetime}.tar.gz"
