# Open a PR to bump the version of semgrep in semgrep-app
name: open-bump-pr

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      repository:
        required: true
        type: string
      base_branch:
        required: true
        type: string
      new_branch_name:
        required: false
        type: string
      bump_script_path:
        required: true
        type: string
    outputs:
      pr-url:
        description: "The PR URL that's opened for the version bump"
        value: ${{ jobs.bump-version.outputs.pr-url }}
      pr-number:
        description: "The PR Number that's opened for the version bump"
        value: ${{ jobs.bump-version.outputs.pr-number }}

jobs:
  bump-version:
    name: Static Analysis Scan
    runs-on: ubuntu-22.04
    outputs:
      pr-url: ${{ steps.open-pr.outputs.pr-url }}
      pr-number: ${{ steps.open-pr.outputs.pr-number }}
    steps:
      - name: Get JWT for semgrep-ci GitHub App
        id: jwt
        uses: docker://public.ecr.aws/y9k7q4m1/devops/cicd:latest
        env:
          EXPIRATION: 600 # seconds
          ISSUER: ${{ secrets.SEMGREP_CI_APP_ID }} # semgrep-ci GitHub App id
          PRIVATE_KEY: ${{ secrets.SEMGREP_CI_APP_KEY }}
      - name: Get token for semgrep-ci GitHub App
        id: token
        run: |
          TOKEN="$(curl -X POST \
          -H "Authorization: Bearer ${{ steps.jwt.outputs.jwt }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/app/installations/${{ secrets.SEMGREP_CI_APP_INSTALLATION_ID }}/access_tokens" | \
          jq -r .token)"
          echo "::add-mask::$TOKEN"
          echo "::set-output name=token::$TOKEN"
      # some repos need this, others may not - we'll take the hit on overhead
      # instead of calling a workflow from another repo. doing that (calling workflow in another repo)
      # comes with a bunch more eng effort to set up proper secrets passing, and I've decided it's better to do this.
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Checkout semgrep-app Repo
        id: checkout-semgrep-app
        uses: actions/checkout@v3
        with:
          repository: "${{ inputs.repository }}"
          token: "${{ steps.token.outputs.token }}"
          ref: "${{ inputs.base_branch }}"
          submodules: "recursive"
      - name: Create Release Branch
        id: release-branch
        run: |
          RELEASE_BRANCH="${{ inputs.new_branch_name }}"
          if [ -z "${{ inputs.new_branch_name }}" ]; then
            RELEASE_BRANCH="release-${{ inputs.version }}"
          fi
          git checkout -b ${RELEASE_BRANCH}
          echo ::set-output name=release-branch::${RELEASE_BRANCH}
      - name: Run release scripts
        id: release-script
        run: |
          "${{ inputs.bump_script_path }}" "${{ inputs.version }}"
      - name: Push release branch
        id: push-release-branch
        run: |
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}@users.noreply.github.com
          git add --all
          git commit -m "chore: Bump version to ${{ inputs.version }}"
          git push --set-upstream origin ${{ steps.release-branch.outputs.release-branch }}
      - name: Create PR
        id: open-pr
        env:
          SOURCE: "${{ steps.release-branch.outputs.release-branch }}"
          TARGET: "${{ inputs.base_branch }}"
          TITLE: "chore: Release Version ${{ inputs.version }}"
          GITHUB_TOKEN: ${{ steps.token.outputs.token }}
        run: |
          # check if the branch already has a pull request open

          if gh pr list --head ${SOURCE} | grep -vq "no pull requests"; then
              # pull request already open
              echo "pull request from SOURCE ${SOURCE} to TARGET ${TARGET} is already open";
              echo "cancelling release"
              exit 1
          fi

          # open new pull request with the body of from the local template.
          PR_URL=$(gh pr create --title "${TITLE}" --body "Bump Semgrep Version to ${{ inputs.version }}" \
            --base "${TARGET}" --head "${SOURCE}")

          echo $PR_URL

          #GH actions doesn't provide an easy way to determine this, so we capture the number and go from there.
          PR_NUMBER=$(echo $PR_URL | sed 's|.*pull/\(.*\)|\1|')

          echo "::set-output name=pr-number::$PR_NUMBER"
          echo "::set-output name=pr-url::$PR_URL"
