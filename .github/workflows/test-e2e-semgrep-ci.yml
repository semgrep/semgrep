# AUTOGENERATED FROM test-e2e-semgrep-ci.jsonnet DO NOT MODIFY
name: test-e2e-semgrep-ci
"on":
  workflow_dispatch:
    inputs:
      docker_tag:
        description: 'Docker Tag to Run. Default: develop'
        required: false
        default: develop
  schedule:
  - cron: 43 20 * * *
jobs:
  get-inputs:
    name: Get Inputs
    runs-on: ubuntu-22.04
    outputs:
      docker_tag: ${{ steps.get-inputs.outputs.docker_tag }}
    steps:
    - name: Set variables
      id: get-inputs
      env:
        DOCKER_TAG: develop
      run: echo "docker_tag=${{ inputs.docker_tag || env.DOCKER_TAG }}" >> $GITHUB_OUTPUT
    - name: Debug
      run: echo "${{ steps.get-inputs.outputs.docker_tag }}"
  semgrep-ci:
    runs-on: ubuntu-22.04
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_E2E_APP_TOKEN }}
    needs: get-inputs
    container:
      image: returntocorp/semgrep:${{ needs.get-inputs.outputs.docker_tag }}
    steps:
    - uses: actions/checkout@v3
    - run: semgrep ci
  semgrep-ci-fail-open:
    runs-on: ubuntu-22.04
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_E2E_APP_TOKEN }}
      SEMGREP_APP_URL: https://staging.semgrep.dev
      SEMGREP_USER_AGENT_APPEND: semgrep-ci-e2e
    needs: get-inputs
    container:
      image: returntocorp/semgrep:${{ needs.get-inputs.outputs.docker_tag }}
    steps:
    - uses: actions/checkout@v3
    - name: Remove Git Exe
      run: "\n        which git\n        rm /usr/bin/git\n      "
    - run: semgrep ci --suppress-errors
  semgrep-ci-fail-open-blocking-findings:
    runs-on: ubuntu-22.04
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_E2E_APP_TOKEN }}
      SEMGREP_USER_AGENT_APPEND: semgrep-ci-e2e
    needs: get-inputs
    container:
      image: returntocorp/semgrep:${{ needs.get-inputs.outputs.docker_tag }}
    steps:
    - uses: actions/checkout@v3
    - name: Create code under test
      id: create-code
      run: "\n        cat > ./test.py <<- EOF\n        import click\n        click.echo(click.style(\"foo\"))\n
        \       EOF\n      "
    - name: Run CI
      id: run-ci
      run: "\n        if semgrep ci --suppress-errors; then\n           exit 2\n        else\n
        \          exit 0\n        fi\n      "
  semgrep-ci-on-pr:
    runs-on: ubuntu-22.04
    needs: get-inputs
    outputs:
      pr-number: ${{ steps.open-pr.outputs.pr-number }}
    steps:
    - name: Get JWT for semgrep-ci GitHub App
      id: jwt
      uses: docker://public.ecr.aws/y9k7q4m1/devops/cicd:latest
      env:
        EXPIRATION: 600
        ISSUER: ${{ secrets.SEMGREP_CI_APP_ID }}
        PRIVATE_KEY: ${{ secrets.SEMGREP_CI_APP_KEY }}
    - name: Get token for semgrep-ci GitHub App
      id: token
      run: "\n      TOKEN=\"$(curl -X POST \\\n      -H \"Authorization: Bearer ${{
        steps.jwt.outputs.jwt }}\" \\\n      -H \"Accept: application/vnd.github.v3+json\"
        \\\n      \"https://api.github.com/app/installations/${{ secrets.SEMGREP_CI_APP_INSTALLATION_ID
        }}/access_tokens\" | \\\n      jq -r .token)\"\n      echo \"::add-mask::$TOKEN\"\n
        \     echo \"token=$TOKEN\" >> $GITHUB_OUTPUT\n    "
    - uses: actions/checkout@v3
      with:
        repository: returntocorp/e2e
        ref: ${{ github.event.repository.default_branch }}
        token: ${{ steps.token.outputs.token }}
    - name: Prepare the PR
      run: "\n\tgit checkout -b e2e-test-pr-${{ github.run_id }}\n        scripts/change-version.sh
        ${{ needs.get-inputs.outputs.docker_tag }}\n        git config user.name ${{
        github.actor }}\n        git config user.email ${{ github.actor }}@users.noreply.github.com\n
        \       git add --all\n        git commit -m \"chore: Bump version to ${{
        needs.get-inputs.outputs.docker_tag }}\"\n        git push --set-upstream
        origin e2e-test-pr-${{ github.run_id }}\n      "
    - name: Make the PR
      id: open-pr
      env:
        GITHUB_TOKEN: ${{ steps.token.outputs.token }}
      run: "\n          PR_URL=$(gh pr create --title \"chore: fake PR for ${{ needs.get-inputs.outputs.docker_tag
        }}\" --body \"Fake PR\" --base \"develop\" --head \"e2e-test-pr-${{ github.run_id
        }}\")\n          PR_NUMBER=$(echo $PR_URL | sed 's|.*pull/\\(.*\\)|\\1|')\n
        \         echo \"pr-number=$PR_NUMBER\" >> $GITHUB_OUTPUT\n      "
  wait-for-checks:
    runs-on: ubuntu-22.04
    needs: semgrep-ci-on-pr
    steps:
    - name: Get JWT for semgrep-ci GitHub App
      id: jwt
      uses: docker://public.ecr.aws/y9k7q4m1/devops/cicd:latest
      env:
        EXPIRATION: 600
        ISSUER: ${{ secrets.SEMGREP_CI_APP_ID }}
        PRIVATE_KEY: ${{ secrets.SEMGREP_CI_APP_KEY }}
    - name: Get token for semgrep-ci GitHub App
      id: token
      run: "\n      TOKEN=\"$(curl -X POST \\\n      -H \"Authorization: Bearer ${{
        steps.jwt.outputs.jwt }}\" \\\n      -H \"Accept: application/vnd.github.v3+json\"
        \\\n      \"https://api.github.com/app/installations/${{ secrets.SEMGREP_CI_APP_INSTALLATION_ID
        }}/access_tokens\" | \\\n      jq -r .token)\"\n      echo \"::add-mask::$TOKEN\"\n
        \     echo \"token=$TOKEN\" >> $GITHUB_OUTPUT\n    "
    - name: Wait for checks to register
      env:
        GITHUB_TOKEN: ${{ steps.token.outputs.token }}
      run: "\n        LEN_CHECKS=$(gh pr -R returntocorp/e2e view \"${{ needs.semgrep-ci-on-pr.outputs.pr-number
        }}\" --json statusCheckRollup --jq '.statusCheckRollup | length');\n        while
        [ ${LEN_CHECKS} = \"0\" ]; do\n          echo \"No checks available yet\"\n
        \         sleep 30\n          LEN_CHECKS=$(gh pr -R returntocorp/e2e view
        \"${{ needs.semgrep-ci-on-pr.outputs.pr-number }}\" --json statusCheckRollup
        --jq '.statusCheckRollup | length');\n        done\n        echo \"checks
        are valid\"\n        echo ${LEN_CHECKS}\n        gh pr -R returntocorp/e2e
        view \"${{ needs.semgrep-ci-on-pr.outputs.pr-number }}\" --json statusCheckRollup\n
        \     "
    - name: Wait for checks to complete
      env:
        GITHUB_TOKEN: ${{ steps.token.outputs.token }}
      run: gh pr -R returntocorp/e2e checks "${{ needs.semgrep-ci-on-pr.outputs.pr-number
        }}" --interval 30 --watch
  notify-failure:
    needs:
    - semgrep-ci
    - semgrep-ci-on-pr
    - semgrep-ci-fail-open
    - semgrep-ci-fail-open-blocking-findings
    - wait-for-checks
    - get-inputs
    runs-on: ubuntu-20.04
    if: failure()
    steps:
    - run: "\n  curl --request POST \\\n        --url  ${{ secrets.SEMGREP_CI_E2E_NOTIFICATIONS_URL
        }} \\\n        --header 'content-type: application/json' \\\n        --data
        '{\n          \"workflow_run_url\": \"https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
        for more details!\",\n          \"docker_tag\": ${{ needs.get-inputs.outputs.docker_tag
        }},\n          \"message\": \"The PR in `returntocorp/e2e` that had the failure
        was \"${{ needs.semgrep-ci-on-pr.outputs.pr-number }}\"\"\n "
