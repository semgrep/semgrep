# Build and test our semgrep docker image.

name: build-test-docker

on:
  workflow_dispatch:
    inputs:
      docker-tags:
        required: true
        type: string
        description: A multi-line string in the format accepted by docker metadata tag action for the tags to apply to the image
      artifact-name:
        required: true
        type: string
        description: Name (key) to use when uploading the docker image tarball as a artifact
      repository-name:
        required: true
        type: string
        description: The repository/name of the docker image to push, e.g., returntocorp/semgrep
        default: returntocorp/semgrep
      file:
        required: true
        type: string
        description: Dockerfile to build
        default: Dockerfile
      enable-tests:
        required: true
        type: boolean
        description: Whether or not to run validation on the built image
      use-depot-for-docker-build:
        type: boolean
        description: Whether or not to use depot.dev instead of docker buildx to build the docker image
        default: true
      multi-arch:
        type: boolean
        description: Whether or not to build a multi-arch docker image
        default: false

  workflow_call:
    inputs:
      docker-tags:
        required: true
        type: string
        description: A multi-line string in the format accepted by docker metadata tag action for the tags to apply to the image
      artifact-name:
        required: true
        type: string
        description: Name (key) to use when uploading the docker image tarball as a artifact
      repository-name:
        required: true
        type: string
        description: The repository/name of the docker image to push, e.g., returntocorp/semgrep
      file:
        required: true
        type: string
        description: Dockerfile to build
      enable-tests:
        required: true
        type: boolean
        description: Whether or not to run validation on the built image
      use-depot-for-docker-build:
        type: boolean
        description: Whether or not to use depot.dev instead of docker buildx to build the docker image
        default: true
      multi-arch:
        type: boolean
        description: Whether or not to build a multi-arch docker image
        default: false

jobs:
  build-test-docker:
    name: Build and test Semgrep Docker image
    if: ${{ ! inputs.multi-arch }}
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v2
      - id: meta
        name: Set tags and labels
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.repository-name }}
          # :latest is also added automatically
          tags: ${{ inputs.docker-tags }}
      - name: Build image
        id: build-image
        uses: docker/build-push-action@v4
        with:
          outputs: type=docker,dest=/tmp/image.tar
          cache-from: type=gha,src=/tmp/.buildx-cache
          cache-to: type=gha,dest=/tmp/.buildx-cache,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ inputs.file }}
      - name: Load image
        run: |
          docker load --input /tmp/image.tar
      - uses: actions/checkout@v3
      - name: Test Image
        if: ${{ inputs.enable-tests }}
        run: ./scripts/validate-docker-build.sh ${{ steps.build-image.outputs.imageid }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}
          path: /tmp/image.tar
  build-test-docker-multi-arch:
    name: Build and test multi-arch Semgrep Docker image
    if: ${{ inputs.multi-arch }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        architecture:
          - amd64
          - arm64
    steps:
      - if: ${{ matrix.architecture != 'amd64' }}
        uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - id: meta
        name: Set tags and labels
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.repository-name }}
          # :latest is also added automatically
          tags: ${{ inputs.docker-tags }}
      - uses: depot/setup-action@v1
        if: ${{ inputs.use-depot-for-docker-build }}
      - name: Build image (via depot.dev)
        id: build-image-depot
        if: ${{ inputs.use-depot-for-docker-build }}
        uses: depot/build-push-action@v1.7.1
        with:
          project: fhmxj6w9z8
          platforms: linux/${{ matrix.architecture }}
          outputs: type=docker,dest=/tmp/image.tar
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ inputs.file }}
          buildx-fallback: true
      - name: Build image (via docker buildx)
        id: build-image-docker
        if: ${{ ! inputs.use-depot-for-docker-build }}
        uses: docker/build-push-action@v4.1.1
        with:
          platforms: linux/${{ matrix.architecture }}
          outputs: type=docker,dest=/tmp/image.tar
          cache-from: type=gha,src=/tmp/.buildx-cache
          cache-to: type=gha,dest=/tmp/.buildx-cache,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ inputs.file }}
          provenance: false
      - name: Load image
        if: ${{ inputs.enable-tests }}
        run: |
          docker load --input /tmp/image.tar
      - uses: actions/checkout@v3
        if: ${{ inputs.enable-tests }}
      - name: Test Image
        if: ${{ inputs.enable-tests }}
        run: ./scripts/validate-docker-build.sh ${{ inputs.use-depot-for-docker-build && steps.build-image-depot.outputs.imageid || steps.build-image-docker.outputs.imageid }} linux/${{ matrix.architecture }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}-arch-${{ matrix.architecture }}
          path: /tmp/image.tar
