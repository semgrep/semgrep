name: build-test-docker

on:
  workflow_dispatch:
    inputs:
      docker-tags:
        required: true
        type: string
        description: A multi-line string in the format accepted by docker metadata tag action for the tags to apply to the image
      artifact-name:
        required: true
        type: string
        description: Name (key) to use when uploading the docker image tarball as a artifact
      repository-name:
        required: true
        type: string
        description: The repository/name of the docker image to push, e.g., returntocorp/semgrep
      file:
        required: true
        type: string
        description: Dockerfile to build
      enable-tests:
        required: true
        type: boolean
        description: Whether or not to run validation on the built image

  workflow_call:
    inputs:
      docker-tags:
        required: true
        type: string
        description: A multi-line string in the format accepted by docker metadata tag action for the tags to apply to the image
      artifact-name:
        required: true
        type: string
        description: Name (key) to use when uploading the docker image tarball as a artifact
      repository-name:
        required: true
        type: string
        description: The repository/name of the docker image to push, e.g., returntocorp/semgrep
      file:
        required: true
        type: string
        description: Dockerfile to build
      enable-tests:
        required: true
        type: boolean
        description: Whether or not to run validation on the built image

jobs:
  build-test-docker:
    name: Build and test Semgrep Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v2
      - id: meta
        name: Set tags and labels
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.repository-name }}
          # :latest is also added automatically
          tags: ${{ inputs.docker-tags }}
      - name: Build image
        id: build-image
        uses: docker/build-push-action@v4
        with:
          outputs: type=docker,dest=/tmp/image.tar
          cache-from: type=gha,src=/tmp/.buildx-cache
          cache-to: type=gha,dest=/tmp/.buildx-cache,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ inputs.file }}
      - name: Load image
        run: |
          docker load --input /tmp/image.tar
      - uses: actions/checkout@v3
      - name: Test Image
        if: ${{ inputs.enable-tests }}
        continue-on-error: true
        run: ./scripts/validate-docker-build.sh ${{ steps.build-image.outputs.imageid }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}
          path: /tmp/image.tar
