(library
 (public_name pfff-lang_cpp)
 (name pfff_lang_cpp)
 (wrapped false)
 (libraries
   dyp

   commons commons_core
   pfff-config pfff-h_program-lang
 )
 (preprocess (pps ppx_deriving.show))
)
(ocamllex lexer_cpp)
(menhir (modules parser_cpp)
        (flags --unused-tokens --explain --fixed-exception))

; tree-sitter-cpp is probably better
;(rule
; (targets parser_cpp2.ml)
; (deps (:input-file parser_cpp2.dyp))
; (action (chdir %{project_root} (run %{bin:dypgen} --no-mli --pv-obj --noemit-token-type  %{input-file})))
;)
