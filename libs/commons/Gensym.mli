(* This module allows the generation of fresh types for unique identifiers.
   Such identifiers generated by `mk` are guaranteed to be distinct from each
   other.*)
module MkId () : sig
  (* abstract type! *)
  type t [@@deriving show, eq, ord, hash]

  val mk : unit -> t
  val to_int : t -> int

  (* `unsafe_default` is distinct from all generated IDs, but not from other
     `unsafe_default`s.
  *)
  val unsafe_default : t
  val is_unsafe_default : t -> bool

  (* This will reset the internal counter used by the identifiers, making `mk`
     generate already-generated identifiers.
  *)
  val unsafe_reset_counter : unit -> unit
end
